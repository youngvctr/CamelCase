오후 4:51 2022-02-15

Programming Note

##Git 저장소와 로컬 저장소를 복제##
$$ git clone https://github.com/youngvctr/CamelCase

- 깃 주소를 복사해와서 local에 복제할 때 사용
- Working Directory: 작업할 파일이 있는 diorectory
- Staging Area: 커밋(Commit)을 수행할 파일들이 올라가는 영역
- Git Directory: Git 프로젝트의 메타 데이터와 데이터 정보가 저장되는 디렉토리

******************************************************************
From 작업물 to Git원격저장소의 명령어 패턴 :
$ git add .
$ git commit -m "2022-02-15 commit file"
$ git push
******************************************************************
##Remote Repository에 파일 업로드##

$$git add filename.
$$git add .				
- 로컬 저장소에서 생성(수정)한 파일을 모두 Staging Area에 추가한다.

$$git commit -m "commit message"			
- Local Repo(로컬 저장소)에 commit(커밋)한다. 

$$git push					
- Remote Repo(원격 저장소)에 반영한다.
******************************************************************
From Git 원격저장소 to 작업물의 명령어 패턴 :
$ git fetch
$ git merge
******************************************************************
##Remote Repository에서 파일 다운로드##

$$ git fetch
- 저장소로부터 수정된 내역을 내 로컬 repo로 받을 때 쓰는 명령어

$$ git merge
- 원격 저장소와 로컬 저장소의 소스파일을 맞추는 명령어

$$ git pull
- git fetch와 git merge를 한 번에 사용하는 명령어
*********************************************************************
##용어 정리##
- 메타데이터 : 데이터를 설명해주는 데이터 
- Repo(저장소) : 실제 소스코드가 담겨 있으면서 커밋(commit) 내역 등의 모든 작업 이력이 
	         담긴 공간으로 프로젝트의 데이터는 (메타 데이터, 소스코드 등) .git에 
	         해시(Hash) 값으로 담김. Hash value가 서로 충돌이 발생하지 않으므로 commit한
	         내역을 정확하게 관리할 수 있음.
*********************************************************************



